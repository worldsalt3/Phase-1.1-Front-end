[{"C:\\Users\\Iyo\\Desktop\\assignment_1\\src\\index.js":"1","C:\\Users\\Iyo\\Desktop\\assignment_1\\src\\reportWebVitals.js":"2"},{"size":4592,"mtime":1610311405188,"results":"3","hashOfConfig":"4"},{"size":362,"mtime":499162500000,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1yesipd",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"C:\\Users\\Iyo\\Desktop\\assignment_1\\src\\index.js",["12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31"],"import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nconst url = 'http://api.enye.tech/v1/challenge/records';\n\nconst Record = () => {\n\n  const [style, setStyle] = useState(false);\n  \n  // When the user clicks on the button, open the modal\n  const modal = (e) => {\n    e.preventDefault()\n    setStyle(true);\n  }\n\n  // When the user clicks on <span> (x), close the modal\n  const x = () => {\n   console.log('clicked')\n   return !style;\n    \n  }\n\n  // When the user clicks anywhere outside of the modal, close it\n  // window.onclick = function (event) {\n  //   if (event.target) {\n  //     // event.style.display = 'none'\n  //   }\n  // }\n\n  const [record, setRecord] = useState([]);\n  \n  const getProfiles = async () => {\n    const response = await fetch(url);\n    const record = await response.json();\n    setRecord(record.records.profiles);\n  }\n\n  useEffect(async () => {\n    getProfiles();\n  }, []);\n\n  return (\n    <>\n      <header className='header'>\n        <h1>Records</h1>\n        <Search />\n        <Filter />\n      </header>\n\n      <ul>\n        {record.map((profile, index) => {\n          const {\n            FirstName,\n            LastName,\n            Gender,\n            Latitude,\n            Longitude,\n            CreditCardNumber,\n            CreditCardType,\n            Email,\n            DomainName,\n            PhoneNumber,\n            MacAddress,\n            URL,\n            UserName,\n            LastLogin,\n            PaymentMethod,\n          } = profile;\n\n          if(index < 20) {\n            return (\n              <li key={index} className='card' onClick={(e) => modal(e)}>\n                <h2>\n                  {FirstName} {LastName}\n                </h2>\n                <a href={Email}>\n                  <p className='email'>{Email}</p>\n                </a>\n                <p>{PhoneNumber}</p>\n                <div\n                  className={!style ? 'close-modal modal' : 'open-modal modal'}\n                >\n                  <div className='modal-content'>\n                    <div className='modal-header'>\n                      <span className='close' onClick={() => x()}>\n                        &times;\n                      </span>\n                      <h2>Personal Information</h2>\n                    </div>\n                    <div className='modal-body'>\n                      <div className='content'>\n                        <p>Name</p> \n                        <p>{FirstName} {LastName}</p>\n                      </div>\n                      <div className='content'>\n                        <p>Gender</p>\n                        <p>{Gender}</p>\n                      </div>\n                      <div className='content'>\n                        <p>Email</p>\n                        <p> {Email}</p>\n                      </div>\n                      <div className='content'>\n                        <p>Phone Number</p>\n                        <p>{PhoneNumber}</p>\n                      </div>                \n                    </div>\n                    <div className='modal-footer'>\n                      <h3>CARD</h3>\n                    </div>\n                  </div>\n                </div>\n              </li>\n            )\n          }\n        })}\n      </ul>\n      <Pagination />\n    </>\n  )\n};\n\nconst Search = () => {\n  return(\n    <>\n      <input type=\"text\" className=\"search\"  placeholder=\"Search for names..\" />\n    </>\n  );\n};\n\nconst Pagination = () => {\n  return (\n    <div className='pagination pagin'>\n      <a href='#'>&laquo;</a>\n      <a href='#'>1</a>\n      <a className='active' href='#'>\n        2\n      </a>\n      <a href='#'>3</a>\n      <a href='#'>4</a>\n      <a href='#'>5</a>\n      <a href='#'>6</a>\n      <a href='#'>&raquo;</a>\n    </div>\n  )\n};\n\nconst Filter = () => {\n  return(\n    <div className=\"dropdown\">\n      <button className=\"dropbtn\">Filter</button>\n      <div id=\"myDropdown\" className=\"dropdown-content\">\n        <a href=\"#about\">About</a>\n        <a href=\"#base\">Base</a>\n        <a href=\"#blog\">Blog</a>\n        <a href=\"#contact\">Contact</a>\n        <a href=\"#custom\">Custom</a>\n        <a href=\"#support\">Support</a>\n        <a href=\"#tools\">Tools</a>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.render(\n    <Record />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\Users\\Iyo\\Desktop\\assignment_1\\src\\reportWebVitals.js",[],["32","33"],{"ruleId":"34","severity":1,"message":"35","line":40,"column":13,"nodeType":"36","endLine":42,"endColumn":4},{"ruleId":"37","severity":1,"message":"38","line":53,"column":38,"nodeType":"36","messageId":"39","endLine":53,"endColumn":40},{"ruleId":"40","severity":1,"message":"41","line":58,"column":13,"nodeType":"42","messageId":"43","endLine":58,"endColumn":21},{"ruleId":"40","severity":1,"message":"44","line":59,"column":13,"nodeType":"42","messageId":"43","endLine":59,"endColumn":22},{"ruleId":"40","severity":1,"message":"45","line":60,"column":13,"nodeType":"42","messageId":"43","endLine":60,"endColumn":29},{"ruleId":"40","severity":1,"message":"46","line":61,"column":13,"nodeType":"42","messageId":"43","endLine":61,"endColumn":27},{"ruleId":"40","severity":1,"message":"47","line":63,"column":13,"nodeType":"42","messageId":"43","endLine":63,"endColumn":23},{"ruleId":"40","severity":1,"message":"48","line":65,"column":13,"nodeType":"42","messageId":"43","endLine":65,"endColumn":23},{"ruleId":"40","severity":1,"message":"49","line":66,"column":13,"nodeType":"42","messageId":"43","endLine":66,"endColumn":16},{"ruleId":"40","severity":1,"message":"50","line":67,"column":13,"nodeType":"42","messageId":"43","endLine":67,"endColumn":21},{"ruleId":"40","severity":1,"message":"51","line":68,"column":13,"nodeType":"42","messageId":"43","endLine":68,"endColumn":22},{"ruleId":"40","severity":1,"message":"52","line":69,"column":13,"nodeType":"42","messageId":"43","endLine":69,"endColumn":26},{"ruleId":"53","severity":1,"message":"54","line":136,"column":7,"nodeType":"55","endLine":136,"endColumn":19},{"ruleId":"53","severity":1,"message":"54","line":137,"column":7,"nodeType":"55","endLine":137,"endColumn":19},{"ruleId":"53","severity":1,"message":"54","line":138,"column":7,"nodeType":"55","endLine":138,"endColumn":38},{"ruleId":"53","severity":1,"message":"54","line":141,"column":7,"nodeType":"55","endLine":141,"endColumn":19},{"ruleId":"53","severity":1,"message":"54","line":142,"column":7,"nodeType":"55","endLine":142,"endColumn":19},{"ruleId":"53","severity":1,"message":"54","line":143,"column":7,"nodeType":"55","endLine":143,"endColumn":19},{"ruleId":"53","severity":1,"message":"54","line":144,"column":7,"nodeType":"55","endLine":144,"endColumn":19},{"ruleId":"53","severity":1,"message":"54","line":145,"column":7,"nodeType":"55","endLine":145,"endColumn":19},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-unused-vars","'Latitude' is assigned a value but never used.","Identifier","unusedVar","'Longitude' is assigned a value but never used.","'CreditCardNumber' is assigned a value but never used.","'CreditCardType' is assigned a value but never used.","'DomainName' is assigned a value but never used.","'MacAddress' is assigned a value but never used.","'URL' is assigned a value but never used.","'UserName' is assigned a value but never used.","'LastLogin' is assigned a value but never used.","'PaymentMethod' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-global-assign","no-unsafe-negation"]