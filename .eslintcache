[{"C:\\Users\\Iyo\\Desktop\\assignment_1\\src\\index.js":"1","C:\\Users\\Iyo\\Desktop\\assignment_1\\src\\reportWebVitals.js":"2"},{"size":989,"mtime":1610229287011,"results":"3","hashOfConfig":"4"},{"size":362,"mtime":499162500000,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1yesipd",{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Users\\Iyo\\Desktop\\assignment_1\\src\\index.js",["11"],"C:\\Users\\Iyo\\Desktop\\assignment_1\\src\\reportWebVitals.js",[],["12","13"],{"ruleId":"14","severity":1,"message":"15","line":19,"column":13,"nodeType":"16","endLine":21,"endColumn":4},{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","replacedBy":"20"},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-native-reassign",["21"],"no-negated-in-lhs",["22"],"no-global-assign","no-unsafe-negation"]